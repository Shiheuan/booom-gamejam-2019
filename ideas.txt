故事梗概：

逃脱，达成条件，精神逃脱或带着shell一起逃脱

主角功能

移动（位置信息，表里切换时保存位置）
与物体交互（电子，普通）

交互物体：
tile

自动贩卖机 Vending Machine
唱片机
人工智能（管家)
街机

需要根据游戏进程改变的对象，在代码中生成，控制信息保存在房间信息中

主要功能，碰撞

types 对象类型

objects 包含所有的对象的信息（地图场景中物体）
带有碰撞体积的物体对象可以在碰撞检测到时阻碍玩家进入，并根据物体类型显式提示信息

（右下需要处理，同时包含右下状态的 tile 会出 bug

切换场景逻辑

map 需要卸载？使用 mget 是在 map editor 中的位置进行读取，需要对不同房间进行偏移

角色卷屏判定位置与 地图 size 匹配

使用 rooms 管理地图信息，可移动区域等信息保存起来

用区域检测碰撞，避免 左上角点 进行tile检测时，错误的使用了上一排的 tile 进行判断

区域如果存在相交，则碰撞，并，将位置重置（阻止进入碰撞体）

!!判断两个矩形相交
top-left 为 (0, 0) 向下向右生长
两个点 top-left (x, y) bottom-right (x+n, y+n) 界

r1 和 r2 两个矩形

不相交
r1.x+n < r2.x || r1.x > r2.x+n || r1.y > r2.y+n || r1.y+n <  r2.y

not 不相交 -> 相交

另一种解释

如果相交需要同时满足条件，一个的左界在另一个的右界的左边，
右在左的右边，上在下的上面，下在上的下面。

map 8*8
object n*n
player 8*8

最后5小时 核心功能咯
shift to cyber space

-- for test 随时按键进入命令行模式，

命令行模式根据不同交互对象有不同的显式文本，命令输入使用方向键选择 table 命令 需要相同吧

_update

-draw

来切换场景，进行更新与渲染
-maingame_init
-maingame_update
-maingame_draw
-console_init
-console_update
-console_draw

先弄一下 titlescene

尽量不用现实存在的不好理解的命令

屏幕信息管理，队列，最上放的信息被释放掉，每一行能显示的字符数量（需要自动换行？）

不同命令的 paser

命令反馈

ip 连接
shutdown ip 关闭某某
exit 退出控制台
---

主循环游戏中 的屏幕显式布局

文字信息，需要多大，框？

最后有时间再做动画

-- 内容

第一关 开门 + 控制台教学
 开门 done
第二关 
 插网线 开门
第三关


